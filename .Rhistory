colnames(df) = c("Node1", "Node2", "Node3", "Node4", "Node5")
prop = c()
for (col in colnames(df)) {
prop = c(prop, sum(df[,col] <= 254) / 500)
}
centrality = read.csv("AbsorptionCentrality1.csv")
colnames(centrality) = c("Node", "Centrality")
res = rev(centrality$Centrality)
print(prop)
print(res)
corr = c(corr, cor(x = prop, y = res, method = "pearson"))
df = read.csv("Results.csv")
df = df[, 1:5]
colnames(df) = c("Node1", "Node2", "Node3", "Node4", "Node5")
prop = c()
for (col in colnames(df)) {
prop = c(prop, sum(df[,col] <= 254) / 500)
}
centrality = read.csv("AbsorptionCentrality.csv")
colnames(centrality) = c("Node", "Centrality")
res = rev(centrality$Centrality)
corr = c()
corr = c(corr, cor(x = prop, y = res, method = "pearson"))
df = read.csv("Results1.csv")
df = df[, 1:5]
colnames(df) = c("Node1", "Node2", "Node3", "Node4", "Node5")
prop = c()
for (col in colnames(df)) {
prop = c(prop, sum(df[,col] <= 254) / 500)
}
centrality = read.csv("AbsorptionCentrality1.csv")
colnames(centrality) = c("Node", "Centrality")
res = rev(centrality$Centrality)
print(prop)
print(res)
corr = c(corr, cor(x = prop, y = res, method = "pearson"))
df = read.csv("Results2.csv")
df = df[, 1:5]
colnames(df) = c("Node1", "Node2", "Node3", "Node4", "Node5")
prop = c()
for (col in colnames(df)) {
prop = c(prop, sum(df[,col] <= 254) / 500)
}
centrality = read.csv("AbsorptionCentrality2.csv")
colnames(centrality) = c("Node", "Centrality")
res = rev(centrality$Centrality)
print(prop)
print(res)
corr = c(corr, cor(x = prop, y = res, method = "pearson"))
data = data.frame(Correlation = corr)
print(data)
rownames(data) = c("p = 0.3", "p = 0.2", p = "0.1")
knitr::kable(data, caption = "Pearson Correlation between temporal absorption centrality and proportion of times infected over 500 simulations")
knitr::kable(data, caption = "Pearson correlation between temporal absorption centrality and proportion of times infected over 500 simulations")
# Read in students' studying time data.
studying <- read.csv("Exam Period Studying.csv")
y <- na.omit(unlist(studying))
compute_n <- function(x) {
sum(!is.na(x))
}
mean1 <- function(x) {
x = x[!is.na(x)]
mean(x)
}
s_sq <- function(x) {
x = x[!is.na(x)]
mu = mean(x)
n = length(x)
sum((x - mu)^(2))/(n - 1)
}
var_0 = 10
mu_0 = 10
v_0 = 20
k_0 = 5
n <- compute_n(y)
n <- data.frame(n)
s_square <- s_sq(y)
n$s_sq <- s_square
mu <- mean1(y)
n$mu <- mu
v_n = n[['n']] + v_0
k_n = n[['n']] + k_0
n$k <- k_n
n$v <- v_n
data = n %>% mutate(mu = (k_0*mu_0 + n*mu)/k, sigma_n_sq = (v_0*var_0 + (n - 1)*s_sq + (mu - mu_0)^(2)*k_0*n/k)/v, alpha = v/2, beta = sigma_n_sq*alpha) %>% select(mu, alpha, beta)
library(ggplot2)
suppressMessages(library(dplyr))
# Read in students' studying time data.
studying <- read.csv("Exam Period Studying.csv")
y <- na.omit(unlist(studying))
compute_n <- function(x) {
sum(!is.na(x))
}
mean1 <- function(x) {
x = x[!is.na(x)]
mean(x)
}
s_sq <- function(x) {
x = x[!is.na(x)]
mu = mean(x)
n = length(x)
sum((x - mu)^(2))/(n - 1)
}
var_0 = 10
mu_0 = 10
v_0 = 20
k_0 = 5
n <- compute_n(y)
n <- data.frame(n)
s_square <- s_sq(y)
n$s_sq <- s_square
mu <- mean1(y)
n$mu <- mu
v_n = n[['n']] + v_0
k_n = n[['n']] + k_0
n$k <- k_n
n$v <- v_n
data = n %>% mutate(mu = (k_0*mu_0 + n*mu)/k, sigma_n_sq = (v_0*var_0 + (n - 1)*s_sq + (mu - mu_0)^(2)*k_0*n/k)/v, alpha = v/2, beta = sigma_n_sq*alpha) %>% select(mu, alpha, beta)
colnames(data) <- c("Posterior mean of $\\theta$ given $\\sigma^{2}$", "$\\alpha$ for the Inverse Gamma distribution of $\\sigma^{2}$", "$\\beta$ for the Inverse Gamma distribution of $\\sigma^{2}$")
knitr::kable(data)
# Read in students' studying time data.
studying <- read.csv("Exam Period Studying.csv")
y <- na.omit(unlist(studying))
compute_n <- function(x) {
sum(!is.na(x))
}
mean1 <- function(x) {
x = x[!is.na(x)]
mean(x)
}
s_sq <- function(x) {
x = x[!is.na(x)]
mu = mean(x)
n = length(x)
sum((x - mu)^(2))/(n - 1)
}
var_0 = 10
mu_0 = 10
v_0 = 20
k_0 = 5
n <- compute_n(y)
n <- data.frame(n)
s_square <- s_sq(y)
n$s_sq <- s_square
mu <- mean1(y)
n$mu <- mu
v_n = n[['n']] + v_0
k_n = n[['n']] + k_0
n$k <- k_n
n$v <- v_n
data = n %>% mutate(mu = (k_0*mu_0 + n*mu)/k, sigma_n_sq = (v_0*var_0 + (n - 1)*s_sq + (mu - mu_0)^(2)*k_0*n/k)/v, alpha = v/2, beta = sigma_n_sq*alpha, post_sigma = beta/(alpha - 1)) %>% select(mu, alpha, beta, post_sigma)
colnames(data) <- c("Posterior mean of $\\theta$ given $\\sigma^{2}$", "$\\alpha$ for the Inverse Gamma distribution of $\\sigma^{2}$", "$\\beta$ for the Inverse Gamma distribution of $\\sigma^{2}$", "$E(\sigma^{2}|\mathbf(Y))$")
# Read in students' studying time data.
studying <- read.csv("Exam Period Studying.csv")
y <- na.omit(unlist(studying))
compute_n <- function(x) {
sum(!is.na(x))
}
mean1 <- function(x) {
x = x[!is.na(x)]
mean(x)
}
s_sq <- function(x) {
x = x[!is.na(x)]
mu = mean(x)
n = length(x)
sum((x - mu)^(2))/(n - 1)
}
var_0 = 10
mu_0 = 10
v_0 = 20
k_0 = 5
n <- compute_n(y)
n <- data.frame(n)
s_square <- s_sq(y)
n$s_sq <- s_square
mu <- mean1(y)
n$mu <- mu
v_n = n[['n']] + v_0
k_n = n[['n']] + k_0
n$k <- k_n
n$v <- v_n
data = n %>% mutate(mu = (k_0*mu_0 + n*mu)/k, sigma_n_sq = (v_0*var_0 + (n - 1)*s_sq + (mu - mu_0)^(2)*k_0*n/k)/v, alpha = v/2, beta = sigma_n_sq*alpha, post_sigma = beta/(alpha - 1)) %>% select(mu, alpha, beta, post_sigma)
colnames(data) <- c("Posterior mean of $\\theta$ given $\\sigma^{2}$", "$\\alpha$ for the Inverse Gamma distribution of $\\sigma^{2}$", "$\\beta$ for the Inverse Gamma distribution of $\\sigma^{2}$", "$E(\\sigma^{2}|\mathbf(Y))$")
# Read in students' studying time data.
studying <- read.csv("Exam Period Studying.csv")
y <- na.omit(unlist(studying))
compute_n <- function(x) {
sum(!is.na(x))
}
mean1 <- function(x) {
x = x[!is.na(x)]
mean(x)
}
s_sq <- function(x) {
x = x[!is.na(x)]
mu = mean(x)
n = length(x)
sum((x - mu)^(2))/(n - 1)
}
var_0 = 10
mu_0 = 10
v_0 = 20
k_0 = 5
n <- compute_n(y)
n <- data.frame(n)
s_square <- s_sq(y)
n$s_sq <- s_square
mu <- mean1(y)
n$mu <- mu
v_n = n[['n']] + v_0
k_n = n[['n']] + k_0
n$k <- k_n
n$v <- v_n
data = n %>% mutate(mu = (k_0*mu_0 + n*mu)/k, sigma_n_sq = (v_0*var_0 + (n - 1)*s_sq + (mu - mu_0)^(2)*k_0*n/k)/v, alpha = v/2, beta = sigma_n_sq*alpha, post_sigma = beta/(alpha - 1)) %>% select(mu, alpha, beta, post_sigma)
colnames(data) <- c("Posterior mean of $\\theta$ given $\\sigma^{2}$", "$\\alpha$ for the Inverse Gamma distribution of $\\sigma^{2}$", "$\\beta$ for the Inverse Gamma distribution of $\\sigma^{2}$", "$E(\\sigma^{2}|\\mathbf(Y))$")
knitr::kable(data)
# Read in students' studying time data.
studying <- read.csv("Exam Period Studying.csv")
y <- na.omit(unlist(studying))
compute_n <- function(x) {
sum(!is.na(x))
}
mean1 <- function(x) {
x = x[!is.na(x)]
mean(x)
}
s_sq <- function(x) {
x = x[!is.na(x)]
mu = mean(x)
n = length(x)
sum((x - mu)^(2))/(n - 1)
}
var_0 = 10
mu_0 = 10
v_0 = 20
k_0 = 5
n <- compute_n(y)
n <- data.frame(n)
s_square <- s_sq(y)
n$s_sq <- s_square
mu <- mean1(y)
n$mu <- mu
v_n = n[['n']] + v_0
k_n = n[['n']] + k_0
n$k <- k_n
n$v <- v_n
data = n %>% mutate(mu = (k_0*mu_0 + n*mu)/k, sigma_n_sq = (v_0*var_0 + (n - 1)*s_sq + (mu - mu_0)^(2)*k_0*n/k)/v, alpha = v/2, beta = sigma_n_sq*alpha, post_sigma = beta/(alpha - 1)) %>% select(mu, alpha, beta, post_sigma)
colnames(data) <- c("Posterior mean of $\\theta$ given $\\sigma^{2}$", "$\\alpha$ for the Inverse Gamma distribution of $\\sigma^{2}$", "$\\beta$ for the Inverse Gamma distribution of $\\sigma^{2}$", "$E(\\sigma^{2}|\\mathbf{Y})$")
knitr::kable(data)
# Read in students' studying time data.
studying <- read.csv("Exam Period Studying.csv")
y <- na.omit(unlist(studying))
compute_n <- function(x) {
sum(!is.na(x))
}
mean1 <- function(x) {
x = x[!is.na(x)]
mean(x)
}
s_sq <- function(x) {
x = x[!is.na(x)]
mu = mean(x)
n = length(x)
sum((x - mu)^(2))/(n - 1)
}
var_0 = 10
mu_0 = 10
v_0 = 20
k_0 = 5
n <- compute_n(y)
n <- data.frame(n)
s_square <- s_sq(y)
n$s_sq <- s_square
mu <- mean1(y)
n$mu <- mu
v_n = n[['n']] + v_0
k_n = n[['n']] + k_0
n$k <- k_n
n$v <- v_n
data = n %>% mutate(mu = (k_0*mu_0 + n*mu)/k, sigma_n_sq = (v_0*var_0 + (n - 1)*s_sq + (mu - mu_0)^(2)*k_0*n/k)/v, alpha = v/2, beta = sigma_n_sq*alpha, post_sigma = beta/(alpha - 1)) %>% select(mu, alpha, beta, post_sigma)
colnames(data) <- c("Posterior mean of $\\theta$ given $\\sigma^{2}$", "$\\alpha$ for the Inverse Gamma distribution of $\\sigma^{2}$", "$\\beta$ for the Inverse Gamma distribution of $\\sigma^{2}, \mathbf{Y}$", "$E(\\sigma^{2}|\\mathbf{Y})$")
# Read in students' studying time data.
studying <- read.csv("Exam Period Studying.csv")
y <- na.omit(unlist(studying))
compute_n <- function(x) {
sum(!is.na(x))
}
mean1 <- function(x) {
x = x[!is.na(x)]
mean(x)
}
s_sq <- function(x) {
x = x[!is.na(x)]
mu = mean(x)
n = length(x)
sum((x - mu)^(2))/(n - 1)
}
var_0 = 10
mu_0 = 10
v_0 = 20
k_0 = 5
n <- compute_n(y)
n <- data.frame(n)
s_square <- s_sq(y)
n$s_sq <- s_square
mu <- mean1(y)
n$mu <- mu
v_n = n[['n']] + v_0
k_n = n[['n']] + k_0
n$k <- k_n
n$v <- v_n
data = n %>% mutate(mu = (k_0*mu_0 + n*mu)/k, sigma_n_sq = (v_0*var_0 + (n - 1)*s_sq + (mu - mu_0)^(2)*k_0*n/k)/v, alpha = v/2, beta = sigma_n_sq*alpha, post_sigma = beta/(alpha - 1)) %>% select(mu, alpha, beta, post_sigma)
colnames(data) <- c("Posterior mean of $\\theta$ given $\\sigma^{2}$", "$\\alpha$ for the Inverse Gamma distribution of $\\sigma^{2}$", "$\\beta$ for the Inverse Gamma distribution of $\\sigma^{2}, \\mathbf{Y}$", "$E(\\sigma^{2}|\\mathbf{Y})$")
knitr::kable(data)
# Read in students' studying time data.
studying <- read.csv("Exam Period Studying.csv")
y <- na.omit(unlist(studying))
compute_n <- function(x) {
sum(!is.na(x))
}
mean1 <- function(x) {
x = x[!is.na(x)]
mean(x)
}
s_sq <- function(x) {
x = x[!is.na(x)]
mu = mean(x)
n = length(x)
sum((x - mu)^(2))/(n - 1)
}
var_0 = 10
mu_0 = 10
v_0 = 20
k_0 = 5
n <- compute_n(y)
n <- data.frame(n)
s_square <- s_sq(y)
n$s_sq <- s_square
mu <- mean1(y)
n$mu <- mu
v_n = n[['n']] + v_0
k_n = n[['n']] + k_0
n$k <- k_n
n$v <- v_n
data = n %>% mutate(mu = (k_0*mu_0 + n*mu)/k, sigma_n_sq = (v_0*var_0 + (n - 1)*s_sq + (mu - mu_0)^(2)*k_0*n/k)/v, alpha = v/2, beta = sigma_n_sq*alpha, post_sigma = beta/(alpha - 1)) %>% select(mu, alpha, beta, post_sigma)
colnames(data) <- c("Posterior mean of $\\theta$ given $\\sigma^{2}$", "$\\alpha$ for the Inverse Gamma distribution of $\\sigma^{2}$", "$\\beta$ for the Inverse Gamma distribution of $\\sigma^{2}, \\mathbf{Y}$", "$E(\\sigma^{2} | \\mathbf{Y})$")
knitr::kable(data)
# Read in students' studying time data.
studying <- read.csv("Exam Period Studying.csv")
y <- na.omit(unlist(studying))
compute_n <- function(x) {
sum(!is.na(x))
}
mean1 <- function(x) {
x = x[!is.na(x)]
mean(x)
}
s_sq <- function(x) {
x = x[!is.na(x)]
mu = mean(x)
n = length(x)
sum((x - mu)^(2))/(n - 1)
}
var_0 = 10
mu_0 = 10
v_0 = 20
k_0 = 5
n <- compute_n(y)
n <- data.frame(n)
s_square <- s_sq(y)
n$s_sq <- s_square
mu <- mean1(y)
n$mu <- mu
v_n = n[['n']] + v_0
k_n = n[['n']] + k_0
n$k <- k_n
n$v <- v_n
data = n %>% mutate(mu = (k_0*mu_0 + n*mu)/k, sigma_n_sq = (v_0*var_0 + (n - 1)*s_sq + (mu - mu_0)^(2)*k_0*n/k)/v, alpha = v/2, beta = sigma_n_sq*alpha, post_sigma = beta/(alpha - 1)) %>% select(mu, alpha, beta, post_sigma)
colnames(data) <- c("Posterior mean of $\\theta$ given $\\sigma^{2}, \\mathbf{Y}$", "$\\alpha$ for the Inverse Gamma distribution of $\\sigma^{2}$", "$\\beta$ for the Inverse Gamma distribution of $\\sigma^{2}$", "$E(\\sigma^{2} \textbar \\mathbf{Y})$")
knitr::kable(data)
# Read in students' studying time data.
studying <- read.csv("Exam Period Studying.csv")
y <- na.omit(unlist(studying))
compute_n <- function(x) {
sum(!is.na(x))
}
mean1 <- function(x) {
x = x[!is.na(x)]
mean(x)
}
s_sq <- function(x) {
x = x[!is.na(x)]
mu = mean(x)
n = length(x)
sum((x - mu)^(2))/(n - 1)
}
var_0 = 10
mu_0 = 10
v_0 = 20
k_0 = 5
n <- compute_n(y)
n <- data.frame(n)
s_square <- s_sq(y)
n$s_sq <- s_square
mu <- mean1(y)
n$mu <- mu
v_n = n[['n']] + v_0
k_n = n[['n']] + k_0
n$k <- k_n
n$v <- v_n
data = n %>% mutate(mu = (k_0*mu_0 + n*mu)/k, sigma_n_sq = (v_0*var_0 + (n - 1)*s_sq + (mu - mu_0)^(2)*k_0*n/k)/v, alpha = v/2, beta = sigma_n_sq*alpha, post_sigma = beta/(alpha - 1)) %>% select(mu, alpha, beta, post_sigma)
colnames(data) <- c("Posterior mean of $\\theta$ given $\\sigma^{2}, \\mathbf{Y}$", "$\\alpha$ for the Inverse Gamma distribution of $\\sigma^{2}$", "$\\beta$ for the Inverse Gamma distribution of $\\sigma^{2}$", "$E(\\sigma^{2} \\textbar \\mathbf{Y})$")
knitr::kable(data)
# Read in students' studying time data.
studying <- read.csv("Exam Period Studying.csv")
y <- na.omit(unlist(studying))
compute_n <- function(x) {
sum(!is.na(x))
}
mean1 <- function(x) {
x = x[!is.na(x)]
mean(x)
}
s_sq <- function(x) {
x = x[!is.na(x)]
mu = mean(x)
n = length(x)
sum((x - mu)^(2))/(n - 1)
}
var_0 = 10
mu_0 = 10
v_0 = 20
k_0 = 5
n <- compute_n(y)
n <- data.frame(n)
s_square <- s_sq(y)
n$s_sq <- s_square
mu <- mean1(y)
n$mu <- mu
v_n = n[['n']] + v_0
k_n = n[['n']] + k_0
n$k <- k_n
n$v <- v_n
data = n %>% mutate(mu1 = (k_0*mu_0 + n*mu)/k, sigma_n_sq = (v_0*var_0 + (n - 1)*s_sq + (mu - mu_0)^(2)*k_0*n/k)/v, alpha = v/2, beta = sigma_n_sq*alpha, post_sigma = beta/(alpha - 1)) %>% select(mu1, alpha, beta, post_sigma)
colnames(data) <- c("Posterior mean of $\\theta$ given $\\sigma^{2}, \\mathbf{Y}$", "$\\alpha$ for the Inverse Gamma distribution of $\\sigma^{2}$", "$\\beta$ for the Inverse Gamma distribution of $\\sigma^{2}$", "$E(\\sigma^{2} \\textbar \\mathbf{Y})$")
knitr::kable(data)
colnames(data) <- c("mu_theta", "alpha", "beta", "sigma_sq")
prior_sigma_sq = 100/(10 - 1)
prior_var_sigma = 100^(2)/((10 - 1)^(2)(10 - 2))
colnames(data) <- c("mu_theta", "alpha", "beta", "sigma_sq")
prior_sigma_sq = 100/(10 - 1)
prior_var_sigma = 100^(2) / ((10 - 1)^(2)(10 - 2))
colnames(data) <- c("mu_theta", "alpha", "beta", "sigma_sq")
prior_sigma_sq = 100/(10 - 1)
prior_var_sigma = 100^2 / ((10 - 1)^(2)(10 - 2))
colnames(data) <- c("mu_theta", "alpha", "beta", "sigma_sq")
prior_sigma_sq = 100/(10 - 1)
prior_var_sigma = 100^2 / ((10 - 1)^(2)*(10 - 2))
posterior_sigma_sq = data[['sigma_sq']]
posterior_var_sigma = data[['beta']]^(2)/((data[['alpha']] - 1)^(2)*(data[['alpha']] - 2))
prior_theta = 10
prior_var_theta = 2
posterior_theta = data[['mu_theta']]
posterior_var_theta = data[['sigma_sq']]/(5 + compute_n(y))
compute_n(y)
# Read in students' studying time data.
studying <- read.csv("Exam Period Studying.csv")
y <- na.omit(unlist(studying))
compute_n <- function(x) {
sum(!is.na(x))
}
mean1 <- function(x) {
x = x[!is.na(x)]
mean(x)
}
s_sq <- function(x) {
x = x[!is.na(x)]
mu = mean(x)
n = length(x)
sum((x - mu)^(2))/(n - 1)
}
var_0 = 10
mu_0 = 10
v_0 = 20
k_0 = 5
n <- compute_n(y)
n <- data.frame(n)
s_square <- s_sq(y)
print(s_square)
n$s_sq <- s_square
mu <- mean1(y)
print(mu)
n$mu <- mu
v_n = n[['n']] + v_0
k_n = n[['n']] + k_0
n$k <- k_n
n$v <- v_n
data = n %>% mutate(mu1 = (k_0*mu_0 + n*mu)/k, sigma_n_sq = (v_0*var_0 + (n - 1)*s_sq + (mu - mu_0)^(2)*k_0*n/k)/v, alpha = v/2, beta = sigma_n_sq*alpha, post_sigma = beta/(alpha - 1)) %>% select(mu1, alpha, beta, post_sigma)
colnames(data) <- c("Posterior mean of $\\theta$ given $\\sigma^{2}, \\mathbf{Y}$", "$\\alpha$ for the Inverse Gamma distribution of $\\sigma^{2}$", "$\\beta$ for the Inverse Gamma distribution of $\\sigma^{2}$", "$E(\\sigma^{2} \\textbar \\mathbf{Y})$")
knitr::kable(data)
rmdcount("TemporalPrestige.Rmd")
library(rmdwc)
rmdcount("TemporalPrestige.Rmd")
rmdcount("C:\Users\nickw\Downloads\SI_Model\TemporalPrestige.Rmd")
rmdcount("C:\\Users\\nickw\\Downloads\\SI_Model\\TemporalPrestige.Rmd")
getwd()
setwd("C:\\Users\\nickw\\Downloads\\SI_Model")
rmdcount("TemporalPrestige.Rmd")
library(rmdwc)
rmdcount("TemporalPrestige.Rmd")
rmdcount("TemporalPrestige.Rmd")
